%This file is automatically generated from an E-PDDL specification and follows the mAp syntax.

%%%%%%%%%%%%%%%%%%%%%%%%%    FLUENTS    %%%%%%%%%%%%%%%%%%%%%%%%
%Fluents generated from EPDDL by grounding each predicate (and cheking in :init, :goal and actions for extra predicates)
%The fluents are lexicographically sorted and printed in sets of 10

fluent has_key_a, has_key_b, has_key_c, in_room_box_a, in_room_box_b, in_room_box_c, in_room_empty_a, in_room_empty_b, in_room_empty_c, looking_a;
fluent looking_b, looking_c, opened, tail;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%    ACTIONS' NAMES    %%%%%%%%%%%%%%%%%%%%%
%Actions' names generated from EPDDL by adding to each action names its grounded predicates

action move_to_box_PARAMS_a, move_to_box_PARAMS_b, move_to_box_PARAMS_c, move_to_empty_PARAMS_a, move_to_empty_PARAMS_b, move_to_empty_PARAMS_c, open_PARAMS_a, open_PARAMS_b, open_PARAMS_c, peek_PARAMS_a;
action peek_PARAMS_b, peek_PARAMS_c, signal_PARAMS_a, signal_PARAMS_b, signal_PARAMS_c, distract_PARAMS_a_b, distract_PARAMS_a_c, distract_PARAMS_b_a, distract_PARAMS_b_c, distract_PARAMS_c_a;
action distract_PARAMS_c_b;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%    AGENTS' NAMES    %%%%%%%%%%%%%%%%%%%%%%
%Agents' names generated from EPDDL by looking at the 'agent' predicate

agent a, b, c;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%    ACTIONS' SPECIFICATIONS    %%%%%%%%%%%%%%%%
%Actions' specifications generated from EPDDL by grounding each action's definition

%%%Action move_to_box_PARAMS_a

executable move_to_box_PARAMS_a if B(a,in_room_empty_a), in_room_empty_a;
move_to_box_PARAMS_a causes -in_room_empty_a;
move_to_box_PARAMS_a causes in_room_box_a;
a observes move_to_box_PARAMS_a;
b observes move_to_box_PARAMS_a;
c observes move_to_box_PARAMS_a;

%%%

%%%Action move_to_box_PARAMS_b

executable move_to_box_PARAMS_b if B(b,in_room_empty_b), in_room_empty_b;
move_to_box_PARAMS_b causes -in_room_empty_b;
move_to_box_PARAMS_b causes in_room_box_b;
a observes move_to_box_PARAMS_b;
b observes move_to_box_PARAMS_b;
c observes move_to_box_PARAMS_b;

%%%

%%%Action move_to_box_PARAMS_c

executable move_to_box_PARAMS_c if B(c,in_room_empty_c), in_room_empty_c;
move_to_box_PARAMS_c causes -in_room_empty_c;
move_to_box_PARAMS_c causes in_room_box_c;
a observes move_to_box_PARAMS_c;
b observes move_to_box_PARAMS_c;
c observes move_to_box_PARAMS_c;

%%%

%%%Action move_to_empty_PARAMS_a

executable move_to_empty_PARAMS_a if B(a,in_room_box_a), in_room_box_a;
move_to_empty_PARAMS_a causes in_room_empty_a;
move_to_empty_PARAMS_a causes -in_room_box_a;
a observes move_to_empty_PARAMS_a;
b observes move_to_empty_PARAMS_a;
c observes move_to_empty_PARAMS_a;

%%%

%%%Action move_to_empty_PARAMS_b

executable move_to_empty_PARAMS_b if B(b,in_room_box_b), in_room_box_b;
move_to_empty_PARAMS_b causes in_room_empty_b;
move_to_empty_PARAMS_b causes -in_room_box_b;
a observes move_to_empty_PARAMS_b;
b observes move_to_empty_PARAMS_b;
c observes move_to_empty_PARAMS_b;

%%%

%%%Action move_to_empty_PARAMS_c

executable move_to_empty_PARAMS_c if B(c,in_room_box_c), in_room_box_c;
move_to_empty_PARAMS_c causes in_room_empty_c;
move_to_empty_PARAMS_c causes -in_room_box_c;
a observes move_to_empty_PARAMS_c;
b observes move_to_empty_PARAMS_c;
c observes move_to_empty_PARAMS_c;

%%%

%%%Action open_PARAMS_a

executable open_PARAMS_a if B(a,has_key_a), has_key_a, in_room_box_a;
open_PARAMS_a causes opened;
a observes open_PARAMS_a;
b observes open_PARAMS_a;
c observes open_PARAMS_a;

%%%

%%%Action open_PARAMS_b

executable open_PARAMS_b if B(b,has_key_b), has_key_b, in_room_box_b;
open_PARAMS_b causes opened;
a observes open_PARAMS_b;
b observes open_PARAMS_b;
c observes open_PARAMS_b;

%%%

%%%Action open_PARAMS_c

executable open_PARAMS_c if B(c,has_key_c), has_key_c, in_room_box_c;
open_PARAMS_c causes opened;
a observes open_PARAMS_c;
b observes open_PARAMS_c;
c observes open_PARAMS_c;

%%%

%%%Action peek_PARAMS_a

executable peek_PARAMS_a if B(a,looking_a), B(a,opened), looking_a, in_room_box_a, opened;
peek_PARAMS_a determines tail;
a observes peek_PARAMS_a;
a aware_of peek_PARAMS_a;
b aware_of peek_PARAMS_a;
c aware_of peek_PARAMS_a;

%%%

%%%Action peek_PARAMS_b

executable peek_PARAMS_b if B(b,looking_b), B(b,opened), looking_b, in_room_box_b, opened;
peek_PARAMS_b determines tail;
b observes peek_PARAMS_b;
a aware_of peek_PARAMS_b;
b aware_of peek_PARAMS_b;
c aware_of peek_PARAMS_b;

%%%

%%%Action peek_PARAMS_c

executable peek_PARAMS_c if B(c,looking_c), B(c,opened), looking_c, in_room_box_c, opened;
peek_PARAMS_c determines tail;
c observes peek_PARAMS_c;
a aware_of peek_PARAMS_c;
b aware_of peek_PARAMS_c;
c aware_of peek_PARAMS_c;

%%%

%%%Action signal_PARAMS_a

executable signal_PARAMS_a if B(a,looking_a), B(a,opened), looking_a, in_room_box_a, opened;
signal_PARAMS_a determines tail;
a observes signal_PARAMS_a;

%%%

%%%Action signal_PARAMS_b

executable signal_PARAMS_b if B(b,looking_b), B(b,opened), looking_b, in_room_box_b, opened;
signal_PARAMS_b determines tail;
b observes signal_PARAMS_b;

%%%

%%%Action signal_PARAMS_c

executable signal_PARAMS_c if B(c,looking_c), B(c,opened), looking_c, in_room_box_c, opened;
signal_PARAMS_c determines tail;
c observes signal_PARAMS_c;

%%%

%%%Action distract_PARAMS_a_b

executable distract_PARAMS_a_b if B(a,looking_a), B(a,looking_b);
distract_PARAMS_a_b announces -looking_a;
a observes distract_PARAMS_a_b;
b observes distract_PARAMS_a_b;
c observes distract_PARAMS_a_b;
a observes distract_PARAMS_a_b;

%%%

%%%Action distract_PARAMS_a_c

executable distract_PARAMS_a_c if B(a,looking_a), B(a,looking_c);
distract_PARAMS_a_c announces -looking_a;
a observes distract_PARAMS_a_c;
b observes distract_PARAMS_a_c;
c observes distract_PARAMS_a_c;
a observes distract_PARAMS_a_c;

%%%

%%%Action distract_PARAMS_b_a

executable distract_PARAMS_b_a if B(b,looking_b), B(b,looking_a);
distract_PARAMS_b_a announces -looking_b;
a observes distract_PARAMS_b_a;
b observes distract_PARAMS_b_a;
c observes distract_PARAMS_b_a;
b observes distract_PARAMS_b_a;

%%%

%%%Action distract_PARAMS_b_c

executable distract_PARAMS_b_c if B(b,looking_b), B(b,looking_c);
distract_PARAMS_b_c announces -looking_b;
a observes distract_PARAMS_b_c;
b observes distract_PARAMS_b_c;
c observes distract_PARAMS_b_c;
b observes distract_PARAMS_b_c;

%%%

%%%Action distract_PARAMS_c_a

executable distract_PARAMS_c_a if B(c,looking_c), B(c,looking_a);
distract_PARAMS_c_a announces -looking_c;
a observes distract_PARAMS_c_a;
b observes distract_PARAMS_c_a;
c observes distract_PARAMS_c_a;
c observes distract_PARAMS_c_a;

%%%

%%%Action distract_PARAMS_c_b

executable distract_PARAMS_c_b if B(c,looking_c), B(c,looking_b);
distract_PARAMS_c_b announces -looking_c;
a observes distract_PARAMS_c_b;
b observes distract_PARAMS_c_b;
c observes distract_PARAMS_c_b;
c observes distract_PARAMS_c_b;

%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%    INITIAL FLUENTS TRUTH   %%%%%%%%%%%%%%%%%%
%Fluents are considered true when are inserted in :init; otherwise are considered false

%%%True fluents
initially in_room_empty_a, in_room_empty_b, in_room_empty_c, tail, has_key_a, looking_a;
%%%False fluents
initially -in_room_box_b, -in_room_box_a, -has_key_c, -opened, -looking_b, -has_key_b, -looking_c, -in_room_box_c;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%    INITIAL BELIEFS TRUTH   %%%%%%%%%%%%%%%%%%
%Extracted from the :init field

initially C([a,b,c],-in_room_box_c);
initially C([a,b,c],in_room_empty_b);
initially C([a,b,c],in_room_empty_c);
initially C([a,b,c],-opened);
initially C([a,b,c],has_key_a);
initially C([a,b,c],-has_key_c);
initially C([a,b,c],looking_a);
initially C([a,b,c],-looking_b);
initially C([a,b,c],in_room_empty_a);
initially C([a,b,c],-in_room_box_b);
initially C([a,b,c],-in_room_box_a);
initially C([a,b,c],-looking_c);
initially C([a,b,c],-has_key_b);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%    GOALS   %%%%%%%%%%%%%%%%%%%%%%%%%%
%The goals of the plan. Each goal is presented separately to ease the reading

goal B(a,opened);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
