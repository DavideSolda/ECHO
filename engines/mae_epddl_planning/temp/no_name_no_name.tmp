%This file is automatically generated from an E-PDDL specification and follows the mAp syntax.

%%%%%%%%%%%%%%%%%%%%%%%%%    FLUENTS    %%%%%%%%%%%%%%%%%%%%%%%%
%Fluents generated from EPDDL by grounding each predicate (and cheking in :init, :goal and actions for extra predicates)
%The fluents are lexicographically sorted and printed in sets of 10

fluent free_table, owner_alice_orange, owner_alice_red, owner_alice_yellow, owner_bob_orange, owner_bob_red, owner_bob_yellow, table_orange, table_red, table_yellow;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%    ACTIONS' NAMES    %%%%%%%%%%%%%%%%%%%%%
%Actions' names generated from EPDDL by adding to each action names its grounded predicates

action lookup_alice_red, lookup_alice_orange, lookup_alice_yellow, lookup_bob_red, lookup_bob_orange, lookup_bob_yellow, pickfromtableplaceonstack_alice_red, pickfromtableplaceonstack_alice_orange, pickfromtableplaceonstack_alice_yellow, pickfromtableplaceonstack_bob_red;
action pickfromtableplaceonstack_bob_orange, pickfromtableplaceonstack_bob_yellow, pickfromstackplaceontable_alice_red, pickfromstackplaceontable_alice_orange, pickfromstackplaceontable_alice_yellow, pickfromstackplaceontable_bob_red, pickfromstackplaceontable_bob_orange, pickfromstackplaceontable_bob_yellow, announceontable_alice_red, announceontable_alice_orange;
action announceontable_alice_yellow, announceontable_bob_red, announceontable_bob_orange, announceontable_bob_yellow, announcefreetable_alice, announcefreetable_bob;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%    AGENTS' NAMES    %%%%%%%%%%%%%%%%%%%%%%
%Agents' names generated from EPDDL by looking at the 'agent' predicate

agent alice, bob;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%    ACTIONS' SPECIFICATIONS    %%%%%%%%%%%%%%%%
%Actions' specifications generated from EPDDL by grounding each action's definition

%%%Action lookup_alice_red

executable lookup_alice_red;
lookup_alice_red determines owner_alice_red if owner_alice_red;
alice observes lookup_alice_red;

%%%

%%%Action lookup_alice_orange

executable lookup_alice_orange;
lookup_alice_orange determines owner_alice_orange if owner_alice_orange;
alice observes lookup_alice_orange;

%%%

%%%Action lookup_alice_yellow

executable lookup_alice_yellow;
lookup_alice_yellow determines owner_alice_yellow if owner_alice_yellow;
alice observes lookup_alice_yellow;

%%%

%%%Action lookup_bob_red

executable lookup_bob_red;
lookup_bob_red determines owner_bob_red if owner_bob_red;
bob observes lookup_bob_red;

%%%

%%%Action lookup_bob_orange

executable lookup_bob_orange;
lookup_bob_orange determines owner_bob_orange if owner_bob_orange;
bob observes lookup_bob_orange;

%%%

%%%Action lookup_bob_yellow

executable lookup_bob_yellow;
lookup_bob_yellow determines owner_bob_yellow if owner_bob_yellow;
bob observes lookup_bob_yellow;

%%%

%%%Action pickfromtableplaceonstack_alice_red

executable pickfromtableplaceonstack_alice_red if B(alice,table_red), -free_table, -owner_alice_red, -free_table, table_red;
pickfromtableplaceonstack_alice_red causes owner_alice_red;
pickfromtableplaceonstack_alice_red causes -table_red;
pickfromtableplaceonstack_alice_red causes free_table;
alice observes pickfromtableplaceonstack_alice_red;

%%%

%%%Action pickfromtableplaceonstack_alice_orange

executable pickfromtableplaceonstack_alice_orange if B(alice,table_orange), -free_table, -owner_alice_orange, -free_table, table_orange;
pickfromtableplaceonstack_alice_orange causes owner_alice_orange;
pickfromtableplaceonstack_alice_orange causes -table_orange;
pickfromtableplaceonstack_alice_orange causes free_table;
alice observes pickfromtableplaceonstack_alice_orange;

%%%

%%%Action pickfromtableplaceonstack_alice_yellow

executable pickfromtableplaceonstack_alice_yellow if B(alice,table_yellow), -free_table, -owner_alice_yellow, -free_table, table_yellow;
pickfromtableplaceonstack_alice_yellow causes owner_alice_yellow;
pickfromtableplaceonstack_alice_yellow causes -table_yellow;
pickfromtableplaceonstack_alice_yellow causes free_table;
alice observes pickfromtableplaceonstack_alice_yellow;

%%%

%%%Action pickfromtableplaceonstack_bob_red

executable pickfromtableplaceonstack_bob_red if B(bob,table_red), -free_table, -owner_bob_red, -free_table, table_red;
pickfromtableplaceonstack_bob_red causes owner_bob_red;
pickfromtableplaceonstack_bob_red causes -table_red;
pickfromtableplaceonstack_bob_red causes free_table;
bob observes pickfromtableplaceonstack_bob_red;

%%%

%%%Action pickfromtableplaceonstack_bob_orange

executable pickfromtableplaceonstack_bob_orange if B(bob,table_orange), -free_table, -owner_bob_orange, -free_table, table_orange;
pickfromtableplaceonstack_bob_orange causes owner_bob_orange;
pickfromtableplaceonstack_bob_orange causes -table_orange;
pickfromtableplaceonstack_bob_orange causes free_table;
bob observes pickfromtableplaceonstack_bob_orange;

%%%

%%%Action pickfromtableplaceonstack_bob_yellow

executable pickfromtableplaceonstack_bob_yellow if B(bob,table_yellow), -free_table, -owner_bob_yellow, -free_table, table_yellow;
pickfromtableplaceonstack_bob_yellow causes owner_bob_yellow;
pickfromtableplaceonstack_bob_yellow causes -table_yellow;
pickfromtableplaceonstack_bob_yellow causes free_table;
bob observes pickfromtableplaceonstack_bob_yellow;

%%%

%%%Action pickfromstackplaceontable_alice_red

executable pickfromstackplaceontable_alice_red if B(alice,owner_alice_red), B(alice,free_table), owner_alice_red, free_table;
pickfromstackplaceontable_alice_red causes -owner_alice_red;
pickfromstackplaceontable_alice_red causes table_red;
pickfromstackplaceontable_alice_red causes -free_table;
alice observes pickfromstackplaceontable_alice_red;

%%%

%%%Action pickfromstackplaceontable_alice_orange

executable pickfromstackplaceontable_alice_orange if B(alice,owner_alice_orange), B(alice,free_table), owner_alice_orange, free_table;
pickfromstackplaceontable_alice_orange causes -owner_alice_orange;
pickfromstackplaceontable_alice_orange causes table_orange;
pickfromstackplaceontable_alice_orange causes -free_table;
alice observes pickfromstackplaceontable_alice_orange;

%%%

%%%Action pickfromstackplaceontable_alice_yellow

executable pickfromstackplaceontable_alice_yellow if B(alice,owner_alice_yellow), B(alice,free_table), owner_alice_yellow, free_table;
pickfromstackplaceontable_alice_yellow causes -owner_alice_yellow;
pickfromstackplaceontable_alice_yellow causes table_yellow;
pickfromstackplaceontable_alice_yellow causes -free_table;
alice observes pickfromstackplaceontable_alice_yellow;

%%%

%%%Action pickfromstackplaceontable_bob_red

executable pickfromstackplaceontable_bob_red if B(bob,owner_bob_red), B(bob,free_table), owner_bob_red, free_table;
pickfromstackplaceontable_bob_red causes -owner_bob_red;
pickfromstackplaceontable_bob_red causes table_red;
pickfromstackplaceontable_bob_red causes -free_table;
bob observes pickfromstackplaceontable_bob_red;

%%%

%%%Action pickfromstackplaceontable_bob_orange

executable pickfromstackplaceontable_bob_orange if B(bob,owner_bob_orange), B(bob,free_table), owner_bob_orange, free_table;
pickfromstackplaceontable_bob_orange causes -owner_bob_orange;
pickfromstackplaceontable_bob_orange causes table_orange;
pickfromstackplaceontable_bob_orange causes -free_table;
bob observes pickfromstackplaceontable_bob_orange;

%%%

%%%Action pickfromstackplaceontable_bob_yellow

executable pickfromstackplaceontable_bob_yellow if B(bob,owner_bob_yellow), B(bob,free_table), owner_bob_yellow, free_table;
pickfromstackplaceontable_bob_yellow causes -owner_bob_yellow;
pickfromstackplaceontable_bob_yellow causes table_yellow;
pickfromstackplaceontable_bob_yellow causes -free_table;
bob observes pickfromstackplaceontable_bob_yellow;

%%%

%%%Action announceontable_alice_red

executable announceontable_alice_red if B(alice,table_red), table_red;
announceontable_alice_red announces -owner_alice_red;
announceontable_alice_red announces table_red;
announceontable_alice_red announces -free_table;
alice observes announceontable_alice_red;
bob observes announceontable_alice_red;

%%%

%%%Action announceontable_alice_orange

executable announceontable_alice_orange if B(alice,table_orange), table_orange;
announceontable_alice_orange announces -owner_alice_orange;
announceontable_alice_orange announces table_orange;
announceontable_alice_orange announces -free_table;
alice observes announceontable_alice_orange;
bob observes announceontable_alice_orange;

%%%

%%%Action announceontable_alice_yellow

executable announceontable_alice_yellow if B(alice,table_yellow), table_yellow;
announceontable_alice_yellow announces -owner_alice_yellow;
announceontable_alice_yellow announces table_yellow;
announceontable_alice_yellow announces -free_table;
alice observes announceontable_alice_yellow;
bob observes announceontable_alice_yellow;

%%%

%%%Action announceontable_bob_red

executable announceontable_bob_red if B(bob,table_red), table_red;
announceontable_bob_red announces -owner_bob_red;
announceontable_bob_red announces table_red;
announceontable_bob_red announces -free_table;
alice observes announceontable_bob_red;
bob observes announceontable_bob_red;

%%%

%%%Action announceontable_bob_orange

executable announceontable_bob_orange if B(bob,table_orange), table_orange;
announceontable_bob_orange announces -owner_bob_orange;
announceontable_bob_orange announces table_orange;
announceontable_bob_orange announces -free_table;
alice observes announceontable_bob_orange;
bob observes announceontable_bob_orange;

%%%

%%%Action announceontable_bob_yellow

executable announceontable_bob_yellow if B(bob,table_yellow), table_yellow;
announceontable_bob_yellow announces -owner_bob_yellow;
announceontable_bob_yellow announces table_yellow;
announceontable_bob_yellow announces -free_table;
alice observes announceontable_bob_yellow;
bob observes announceontable_bob_yellow;

%%%

%%%Action announcefreetable_alice

executable announcefreetable_alice if B(alice,free_table), free_table;
announcefreetable_alice announces free_table;
alice observes announcefreetable_alice;
bob observes announcefreetable_alice;

%%%

%%%Action announcefreetable_bob

executable announcefreetable_bob if B(bob,free_table), free_table;
announcefreetable_bob announces free_table;
alice observes announcefreetable_bob;
bob observes announcefreetable_bob;

%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%    INITIAL FLUENTS TRUTH   %%%%%%%%%%%%%%%%%%
%Fluents are considered true when are inserted in :init; otherwise are considered false

%%%True fluents
initially owner_bob_red, owner_bob_orange, owner_alice_yellow, free_table;
%%%False fluents
initially -table_yellow, -owner_alice_red, -table_orange, -owner_alice_orange, -owner_bob_yellow, -table_red;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%    INITIAL BELIEFS TRUTH   %%%%%%%%%%%%%%%%%%
%Extracted from the :init field

initially C([bob,alice],-table_yellow);
initially C([bob,alice],-table_orange);
initially C([bob,alice],free_table);
initially C([bob,alice],-table_red);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%    GOALS   %%%%%%%%%%%%%%%%%%%%%%%%%%
%The goals of the plan. Each goal is presented separately to ease the reading

goal C([alice,bob],owner_alice_red);
goal C([alice,bob],owner_alice_orange);

