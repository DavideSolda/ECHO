%This file is automatically generated from an E-PDDL specification and follows the mAp syntax.

%%%%%%%%%%%%%%%%%%%%%%%%%    FLUENTS    %%%%%%%%%%%%%%%%%%%%%%%%
%Fluents generated from EPDDL by grounding each predicate (and cheking in :init, :goal and actions for extra predicates)
%The fluents are lexicographically sorted and printed in sets of 10

fluent free_table, owner_alice_red, owner_bob_red, table_red;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%    ACTIONS' NAMES    %%%%%%%%%%%%%%%%%%%%%
%Actions' names generated from EPDDL by adding to each action names its grounded predicates

action pspt_alice_red, pspt_bob_red, ptps_alice_red, ptps_bob_red, lookup_alice_red, lookup_bob_red;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%    AGENTS' NAMES    %%%%%%%%%%%%%%%%%%%%%%
%Agents' names generated from EPDDL by looking at the 'agent' predicate

agent alice, bob;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%    ACTIONS' SPECIFICATIONS    %%%%%%%%%%%%%%%%
%Actions' specifications generated from EPDDL by grounding each action's definition

%%%Action pspt_alice_red

executable pspt_alice_red if B(alice,owner_alice_red), owner_alice_red, free_table;
pspt_alice_red causes -owner_alice_red;
pspt_alice_red causes table_red;
pspt_alice_red causes -free_table;
alice observes pspt_alice_red;
bob observes pspt_alice_red;

%%%

%%%Action pspt_bob_red

executable pspt_bob_red if B(bob,owner_bob_red), owner_bob_red, free_table;
pspt_bob_red causes -owner_bob_red;
pspt_bob_red causes table_red;
pspt_bob_red causes -free_table;
alice observes pspt_bob_red;
bob observes pspt_bob_red;

%%%

%%%Action ptps_alice_red

executable ptps_alice_red if -owner_alice_red, -free_table, table_red;
ptps_alice_red causes owner_alice_red;
ptps_alice_red causes -table_red;
ptps_alice_red causes free_table;
alice observes ptps_alice_red;
bob observes ptps_alice_red;

%%%

%%%Action ptps_bob_red

executable ptps_bob_red if -owner_bob_red, -free_table, table_red;
ptps_bob_red causes owner_bob_red;
ptps_bob_red causes -table_red;
ptps_bob_red causes free_table;
alice observes ptps_bob_red;
bob observes ptps_bob_red;

%%%

%%%Action lookup_alice_red

executable lookup_alice_red;
lookup_alice_red determines owner_alice_red if owner_alice_red;
alice observes lookup_alice_red;

%%%

%%%Action lookup_bob_red

executable lookup_bob_red;
lookup_bob_red determines owner_bob_red if owner_bob_red;
bob observes lookup_bob_red;

%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%    INITIAL FLUENTS TRUTH   %%%%%%%%%%%%%%%%%%
%Fluents are considered true when are inserted in :init; otherwise are considered false

%%%True fluents
initially owner_bob_red, free_table;
%%%False fluents
initially -owner_alice_red, -table_red;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%    INITIAL BELIEFS TRUTH   %%%%%%%%%%%%%%%%%%
%Extracted from the :init field

initially C([bob,alice],free_table);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%    GOALS   %%%%%%%%%%%%%%%%%%%%%%%%%%
%The goals of the plan. Each goal is presented separately to ease the reading

goal B(alice,owner_alice_red);

