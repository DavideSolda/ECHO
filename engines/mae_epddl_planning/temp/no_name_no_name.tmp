%This file is automatically generated from an E-PDDL specification and follows the mAp syntax.

%%%%%%%%%%%%%%%%%%%%%%%%%    FLUENTS    %%%%%%%%%%%%%%%%%%%%%%%%
%Fluents generated from EPDDL by grounding each predicate (and cheking in :init, :goal and actions for extra predicates)
%The fluents are lexicographically sorted and printed in sets of 10

fluent free_table, owner_alice_black, owner_alice_orange, owner_alice_red, owner_alice_yellow, owner_bob_black, owner_bob_orange, owner_bob_red, owner_bob_yellow, table_black;
fluent table_orange, table_red, table_yellow;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%    ACTIONS' NAMES    %%%%%%%%%%%%%%%%%%%%%
%Actions' names generated from EPDDL by adding to each action names its grounded predicates

action pspt_alice_red, pspt_alice_orange, pspt_alice_yellow, pspt_alice_black, pspt_bob_red, pspt_bob_orange, pspt_bob_yellow, pspt_bob_black, ptps_alice_red, ptps_alice_orange;
action ptps_alice_yellow, ptps_alice_black, ptps_bob_red, ptps_bob_orange, ptps_bob_yellow, ptps_bob_black;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%    AGENTS' NAMES    %%%%%%%%%%%%%%%%%%%%%%
%Agents' names generated from EPDDL by looking at the 'agent' predicate

agent alice, bob;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%    ACTIONS' SPECIFICATIONS    %%%%%%%%%%%%%%%%
%Actions' specifications generated from EPDDL by grounding each action's definition

%%%Action pspt_alice_red

executable pspt_alice_red if B(alice,free_table), owner_alice_red, free_table;
pspt_alice_red causes -owner_alice_red;
pspt_alice_red causes table_red;
pspt_alice_red causes -free_table;
alice observes pspt_alice_red;

%%%

%%%Action pspt_alice_orange

executable pspt_alice_orange if B(alice,free_table), owner_alice_orange, free_table;
pspt_alice_orange causes -owner_alice_orange;
pspt_alice_orange causes table_orange;
pspt_alice_orange causes -free_table;
alice observes pspt_alice_orange;

%%%

%%%Action pspt_alice_yellow

executable pspt_alice_yellow if B(alice,free_table), owner_alice_yellow, free_table;
pspt_alice_yellow causes -owner_alice_yellow;
pspt_alice_yellow causes table_yellow;
pspt_alice_yellow causes -free_table;
alice observes pspt_alice_yellow;

%%%

%%%Action pspt_alice_black

executable pspt_alice_black if B(alice,free_table), owner_alice_black, free_table;
pspt_alice_black causes -owner_alice_black;
pspt_alice_black causes table_black;
pspt_alice_black causes -free_table;
alice observes pspt_alice_black;

%%%

%%%Action pspt_bob_red

executable pspt_bob_red if B(bob,free_table), owner_bob_red, free_table;
pspt_bob_red causes -owner_bob_red;
pspt_bob_red causes table_red;
pspt_bob_red causes -free_table;
bob observes pspt_bob_red;

%%%

%%%Action pspt_bob_orange

executable pspt_bob_orange if B(bob,free_table), owner_bob_orange, free_table;
pspt_bob_orange causes -owner_bob_orange;
pspt_bob_orange causes table_orange;
pspt_bob_orange causes -free_table;
bob observes pspt_bob_orange;

%%%

%%%Action pspt_bob_yellow

executable pspt_bob_yellow if B(bob,free_table), owner_bob_yellow, free_table;
pspt_bob_yellow causes -owner_bob_yellow;
pspt_bob_yellow causes table_yellow;
pspt_bob_yellow causes -free_table;
bob observes pspt_bob_yellow;

%%%

%%%Action pspt_bob_black

executable pspt_bob_black if B(bob,free_table), owner_bob_black, free_table;
pspt_bob_black causes -owner_bob_black;
pspt_bob_black causes table_black;
pspt_bob_black causes -free_table;
bob observes pspt_bob_black;

%%%

%%%Action ptps_alice_red

executable ptps_alice_red if -owner_alice_red, -free_table, table_red;
ptps_alice_red causes owner_alice_red;
ptps_alice_red causes -table_red;
ptps_alice_red causes free_table;
alice observes ptps_alice_red;

%%%

%%%Action ptps_alice_orange

executable ptps_alice_orange if -owner_alice_orange, -free_table, table_orange;
ptps_alice_orange causes owner_alice_orange;
ptps_alice_orange causes -table_orange;
ptps_alice_orange causes free_table;
alice observes ptps_alice_orange;

%%%

%%%Action ptps_alice_yellow

executable ptps_alice_yellow if -owner_alice_yellow, -free_table, table_yellow;
ptps_alice_yellow causes owner_alice_yellow;
ptps_alice_yellow causes -table_yellow;
ptps_alice_yellow causes free_table;
alice observes ptps_alice_yellow;

%%%

%%%Action ptps_alice_black

executable ptps_alice_black if -owner_alice_black, -free_table, table_black;
ptps_alice_black causes owner_alice_black;
ptps_alice_black causes -table_black;
ptps_alice_black causes free_table;
alice observes ptps_alice_black;

%%%

%%%Action ptps_bob_red

executable ptps_bob_red if -owner_bob_red, -free_table, table_red;
ptps_bob_red causes owner_bob_red;
ptps_bob_red causes -table_red;
ptps_bob_red causes free_table;
bob observes ptps_bob_red;

%%%

%%%Action ptps_bob_orange

executable ptps_bob_orange if -owner_bob_orange, -free_table, table_orange;
ptps_bob_orange causes owner_bob_orange;
ptps_bob_orange causes -table_orange;
ptps_bob_orange causes free_table;
bob observes ptps_bob_orange;

%%%

%%%Action ptps_bob_yellow

executable ptps_bob_yellow if -owner_bob_yellow, -free_table, table_yellow;
ptps_bob_yellow causes owner_bob_yellow;
ptps_bob_yellow causes -table_yellow;
ptps_bob_yellow causes free_table;
bob observes ptps_bob_yellow;

%%%

%%%Action ptps_bob_black

executable ptps_bob_black if -owner_bob_black, -free_table, table_black;
ptps_bob_black causes owner_bob_black;
ptps_bob_black causes -table_black;
ptps_bob_black causes free_table;
bob observes ptps_bob_black;

%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%    INITIAL FLUENTS TRUTH   %%%%%%%%%%%%%%%%%%
%Fluents are considered true when are inserted in :init; otherwise are considered false

%%%True fluents
initially owner_bob_red, owner_bob_orange, owner_bob_black, free_table;
%%%False fluents
initially -table_yellow, -table_orange, -owner_alice_black, -owner_alice_red, -owner_bob_yellow, -table_red, -table_black, -owner_alice_yellow, -owner_alice_orange;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%    INITIAL BELIEFS TRUTH   %%%%%%%%%%%%%%%%%%
%Extracted from the :init field

initially C([bob,alice],owner_bob_red);
initially C([bob,alice],owner_bob_orange);
initially C([bob,alice],owner_bob_black);
initially C([bob,alice],free_table);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%    GOALS   %%%%%%%%%%%%%%%%%%%%%%%%%%
%The goals of the plan. Each goal is presented separately to ease the reading

goal free_table;
goal owner_alice_black;

